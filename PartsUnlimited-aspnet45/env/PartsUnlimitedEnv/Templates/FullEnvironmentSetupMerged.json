{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "WebsiteName": {
      "type": "string"
    },
    "PUL_ServerName": {
      "type": "string"
    },
    "PUL_DBLogin": {
      "type": "string",
      "defaultValue": "AdminUser"
    },
    "PUL_DBPassword": {
      "type": "securestring",
      "defaultValue": "P2ssw0rd"
    },
    "PUL_DBPasswordForTest": {
      "type": "securestring"
    },
    "PUL_DBName": {
      "type": "string",
      "defaultValue": "PartsUnlimitedDB"
    },
    "PUL_DBCollation": {
      "type": "string",
      "defaultValue": "SQL_Latin1_General_CP1_CI_AS"
    },
    "PUL_DBEdition": {
      "type": "string",
      "defaultValue": "Basic"
    },
    "PUL_HostingPlanName": {
      "type": "string"
    },
    "PUL_HostingPlanSKU": {
      "type": "string",

      "defaultValue": "Standard"
    },
    "PUL_HostingPlanWorkerSize": {
      "type": "string",

      "defaultValue": "0"
    },
    "EnableRules": {
      "type": "bool",
      "defaultValue": false
    },
    "CICDEngineName": {
      "type": "string"
    }
  },
  // KEY RESOURCE: Variables
  "variables": {
    "PartsUnlimitedServerName": "[toLower(parameters('PUL_ServerName'))]",
    "PartsUnlimitedServerNameDev": "[concat(variables('PartsUnlimitedServerName'), 'dev')]",
    "PartsUnlimitedServerNameQA": "[concat(variables('PartsUnlimitedServerName'), 'qa')]",
    "TAG_BusinessUnit":  "Contoso",
    "TAG_Team": "Cloud Adoption"
  },
  "resources": [
    {
      // KEY RESOURCE: SQL Server
      "name": "[variables('PartsUnlimitedServerName')]",
      "type": "Microsoft.Sql/servers",
      "location": "[resourceGroup().location]",
      "apiVersion": "2014-04-01-preview",
      "tags": {
        "displayName": "PartsUnlimitedServer",
        "BusinessUnit": "[variables('TAG_BusinessUnit')]",
        "Team": "[variables('TAG_Team')]",
        "CICDEngine": "[parameters('CICDEngineName')]"
      },
      "properties": {
        "administratorLogin": "[parameters('PUL_DBLogin')]",
        "administratorLoginPassword": "[parameters('PUL_DBPassword')]"
      },
      "resources": [
        {
          "name": "[concat('AllowAllIps', variables('PartsUnlimitedServerName'))]",
          "type": "firewallrules",
          "location": "[resourceGroup().location]",
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', variables('PartsUnlimitedServerName'))]"
          ],
          "properties": {
            "startIpAddress": "0.0.0.0",
            "endIpAddress": "0.0.0.0"
          }
        },
        {
          // KEY RESOURCE: Database
          "name": "[parameters('PUL_DBName')]",
          "type": "databases",
          "location": "[resourceGroup().location]",
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', variables('PartsUnlimitedServerName'))]"
          ],
          "tags": {
            "displayName": "PartsUnlimitedDB",
            "BusinessUnit": "[variables('TAG_BusinessUnit')]",
            "Team": "[variables('TAG_Team')]",
            "CICDEngine": "[parameters('CICDEngineName')]"
          },
          "properties": {
            "collation": "[parameters('PUL_DBCollation')]",
            "edition": "[parameters('PUL_DBEdition')]",
            "maxSizeBytes": "1073741824"
          }
        }
      ]
    },
    {
      // KEY RESOURCE: SQL Server (Dev)
      "name": "[variables('PartsUnlimitedServerNameDev')]",
      "type": "Microsoft.Sql/servers",
      "location": "[resourceGroup().location]",
      "apiVersion": "2014-04-01-preview",
      "dependsOn": [],
      "tags": {
        "displayName": "PartsUnlimitedServer",
        "BusinessUnit": "[variables('TAG_BusinessUnit')]",
        "Team": "[variables('TAG_Team')]",
        "CICDEngine": "[parameters('CICDEngineName')]"
      },
      "properties": {
        "administratorLogin": "[parameters('PUL_DBLogin')]",
        "administratorLoginPassword": "[parameters('PUL_DBPasswordForTest')]"
      },
      "resources": [
        {
          "name": "[concat('AllowAllIps', variables('PartsUnlimitedServerNameDev'))]",
          "type": "firewallrules",
          "location": "[resourceGroup().location]",
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', variables('PartsUnlimitedServerNameDev'))]"
          ],
          "properties": {
            "startIpAddress": "0.0.0.0",
            "endIpAddress": "0.0.0.0"
          }
        },
        {
          // KEY RESOURCE: Database (Dev)
          "name": "[parameters('PUL_DBName')]",
          "type": "databases",
          "location": "[resourceGroup().location]",
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', variables('PartsUnlimitedServerNameDev'))]"
          ],
          "tags": {
            "displayName": "PartsUnlimitedDB",
            "BusinessUnit": "[variables('TAG_BusinessUnit')]",
            "Team": "[variables('TAG_Team')]",
            "CICDEngine": "[parameters('CICDEngineName')]"
          },
          "properties": {
            "collation": "[parameters('PUL_DBCollation')]",
            "edition": "[parameters('PUL_DBEdition')]",
            "maxSizeBytes": "1073741824"
          }
        }
      ]
    },
    {
      // KEY RESOURCE: SQL Server (QA)
      "name": "[variables('PartsUnlimitedServerNameQA')]",
      "type": "Microsoft.Sql/servers",
      "location": "[resourceGroup().location]",
      "apiVersion": "2014-04-01-preview",
      "dependsOn": [],
      "tags": {
        "displayName": "PartsUnlimitedServer",
        "BusinessUnit": "[variables('TAG_BusinessUnit')]",
        "Team": "[variables('TAG_Team')]",
        "CICDEngine": "[parameters('CICDEngineName')]"
      },
      "properties": {
        "administratorLogin": "[parameters('PUL_DBLogin')]",
        "administratorLoginPassword": "[parameters('PUL_DBPasswordForTest')]"
      },
      "resources": [
        {
          "name": "[concat('AllowAllIps', variables('PartsUnlimitedServerNameQA'))]",
          "type": "firewallrules",
          "location": "[resourceGroup().location]",
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', variables('PartsUnlimitedServerNameQA'))]"
          ],
          "properties": {
            "startIpAddress": "0.0.0.0",
            "endIpAddress": "0.0.0.0"
          }
        },
        {
          // KEY RESOURCE: Database (QA)
          "name": "[parameters('PUL_DBName')]",
          "type": "databases",
          "location": "[resourceGroup().location]",
          "apiVersion": "2014-04-01-preview",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', variables('PartsUnlimitedServerNameQA'))]"
          ],
          "tags": {
            "displayName": "PartsUnlimitedDB",
            "BusinessUnit": "[variables('TAG_BusinessUnit')]",
            "Team": "[variables('TAG_Team')]",
            "CICDEngine": "[parameters('CICDEngineName')]"
          },
          "properties": {
            "collation": "[parameters('PUL_DBCollation')]",
            "edition": "[parameters('PUL_DBEdition')]",
            "maxSizeBytes": "1073741824"
          }
        }
      ]
    },
    {
      // KEY RESOURCE: Application Insights
      "name": "[concat(parameters('WebsiteName'), '-Insights')]",
      "type": "Microsoft.Insights/components",
      "location": "eastus",
      "apiVersion": "2014-04-01",
      "tags": {
        "displayName": "insightsComponents",
        "BusinessUnit": "[variables('TAG_BusinessUnit')]",
        "Team": "[variables('TAG_Team')]",
        "CICDEngine": "[parameters('CICDEngineName')]"
      },
      "properties": {
        "ApplicationId": "[concat(parameters('WebsiteName'), '-Insights')]"
      }
    },
    {
      // KEY RESOURCE: Application Insights (Dev)
      "name": "[concat(parameters('WebsiteName'), '-DevInsights')]",
      "type": "Microsoft.Insights/components",
      "location": "eastus",
      "apiVersion": "2014-04-01",
      "tags": {
        "displayName": "insightsComponents",
        "BusinessUnit": "[variables('TAG_BusinessUnit')]",
        "Team": "[variables('TAG_Team')]",
        "CICDEngine": "[parameters('CICDEngineName')]"
      },
      "properties": {
        "ApplicationId": "[concat(parameters('WebsiteName'), '-DevInsights')]"
      }
    },
    {
      // KEY RESOURCE: Application Insights (QA)
      "name": "[concat(parameters('WebsiteName'), '-QAInsights')]",
      "type": "Microsoft.Insights/components",
      "location": "eastus",
      "apiVersion": "2014-04-01",
      "tags": {
        "displayName": "insightsComponents",
        "BusinessUnit": "[variables('TAG_BusinessUnit')]",
        "Team": "[variables('TAG_Team')]",
        "CICDEngine": "[parameters('CICDEngineName')]"
      },
      "properties": {
        "ApplicationId": "[concat(parameters('WebsiteName'), '-QAInsights')]"
      }
    },
    {
      // KEY RESOURCE: App Service
      "name": "[parameters('PUL_HostingPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[resourceGroup().location]",
      "apiVersion": "2014-06-01",
      "dependsOn": [],
      "tags": {
        "displayName": "PartsUnlimitedHostingPlan",
        "BusinessUnit": "[variables('TAG_BusinessUnit')]",
        "Team": "[variables('TAG_Team')]",
        "CICDEngine": "[parameters('CICDEngineName')]"
      },
      "properties": {
        "name": "[parameters('PUL_HostingPlanName')]",
        "sku": "[parameters('PUL_HostingPlanSKU')]",
        "workerSize": "[parameters('PUL_HostingPlanWorkerSize')]",
        "numberOfWorkers": 1
      }
    },
    {
      "name": "[concat(parameters('PUL_HostingPlanName'), '-', resourceGroup().name)]",
      "type": "Microsoft.Insights/autoscalesettings",
      "location": "East US",
      "apiVersion": "2014-04-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('PUL_HostingPlanName'))]"
      ],
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('PUL_HostingPlanName'))]": "Resource",
        "displayName": "WebsiteHostingPlanAutoScale",
        "CICDEngine": "[parameters('CICDEngineName')]"
      },
      "properties": {
        "name": "[concat(parameters('PUL_HostingPlanName'), '-', resourceGroup().name)]",
        "profiles": [
          {
            "name": "Default",
            "capacity": {
              "minimum": "1",
              "maximum": "4",
              "default": "1"
            },
            "rules": [
              {
                "metricTrigger": {
                  "metricName": "CpuPercentage",
                  "metricResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('PUL_HostingPlanName'))]",
                  "timeGrain": "PT1M",
                  "statistic": "Average",
                  "timeWindow": "PT10M",
                  "timeAggregation": "Average",
                  "operator": "GreaterThan",
                  "threshold": 80
                },
                "scaleAction": {
                  "direction": "Increase",
                  "type": "ChangeCount",
                  "value": "1",
                  "cooldown": "PT10M"
                }
              },
              {
                "metricTrigger": {
                  "metricName": "CpuPercentage",
                  "metricResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('PUL_HostingPlanName'))]",
                  "timeGrain": "PT1M",
                  "statistic": "Average",
                  "timeWindow": "PT1H",
                  "timeAggregation": "Average",
                  "operator": "LessThan",
                  "threshold": 60
                },
                "scaleAction": {
                  "direction": "Decrease",
                  "type": "ChangeCount",
                  "value": "1",
                  "cooldown": "PT1H"
                }
              }
            ]
          }
        ],
        "enabled": "[parameters('EnableRules')]",
        "targetResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('PUL_HostingPlanName'))]"
      }
    },
    //{
      // "name": "[concat('CPUHigh ', parameters('PUL_HostingPlanName'))]",
      // "type": "Microsoft.Insights/alertrules",
      // "location": "East US",
      // "apiVersion": "2014-04-01",
      // "dependsOn": [
      //   "[resourceId('Microsoft.Web/serverfarms', parameters('PUL_HostingPlanName'))]"
      // ],
      // "tags": {
      //   "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('PUL_HostingPlanName'))]": "Resource",
      //   "displayName": "WebsiteHostingPlanAlertRuleCPUHigh",
      //   "CICDEngine": "[parameters('CICDEngineName')]"
      // },
      // "properties": {
      //   "name": "[concat('CPUHigh ', parameters('PUL_HostingPlanName'))]",
      //   "description": "[concat('The average CPU is high across all the instances of ', parameters('PUL_HostingPlanName'))]",
      //   "isEnabled": "[parameters('EnableRules')]",
      //   "condition": {
      //     "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.ThresholdRuleCondition",
      //     "dataSource": {
      //       "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleMetricDataSource",
      //       "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('PUL_HostingPlanName'))]",
      //       "metricName": "CpuPercentage"
      //     },
      //     "operator": "GreaterThan",
      //     "threshold": 90,
      //     "windowSize": "PT15M"
      //   },
      //   "action": {
      //     "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleEmailAction",
      //     "sendToServiceOwners": true,
      //     "customEmails": []
      //   }
      // }
    //},
    //{
    //   "name": "[concat('LongHttpQueue ', parameters('PUL_HostingPlanName'))]",
    //   "type": "Microsoft.Insights/alertrules",
    //   "location": "East US",
    //   "apiVersion": "2014-04-01",
    //   "dependsOn": [
    //     "[resourceId('Microsoft.Web/serverfarms', parameters('PUL_HostingPlanName'))]"
    //   ],
    //   "tags": {
    //     "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('PUL_HostingPlanName'))]": "Resource",
    //     "displayName": "WebsiteHostingPlanAlertRuleLongHttpQueue",
    //     "CICDEngine": "[parameters('CICDEngineName')]"
    //   },
    //   "properties": {
    //     "name": "[concat('LongHttpQueue ', parameters('PUL_HostingPlanName'))]",
    //     "description": "[concat('The HTTP queue for the instances of ', parameters('PUL_HostingPlanName'), ' has a large number of pending requests.')]",
    //     "isEnabled": "[parameters('EnableRules')]",
    //     "condition": {
    //       "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.ThresholdRuleCondition",
    //       "dataSource": {
    //         "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleMetricDataSource",
    //         "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('PUL_HostingPlanName'))]",
    //         "metricName": "HttpQueueLength"
    //       },
    //       "operator": "GreaterThan",
    //       "threshold": 100,
    //       "windowSize": "PT5M"
    //     },
    //     "action": {
    //       "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleEmailAction",
    //       "sendToServiceOwners": true,
    //       "customEmails": []
    //     }
    //   }
    //},
    {
      "name": "[parameters('WebSiteName')]",
      "type": "Microsoft.Web/sites",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('PUL_HostingPlanName'))]",
        "[resourceId('Microsoft.Sql/servers', variables('PartsUnlimitedServerName'))]",
        "[resourceId('Microsoft.Sql/servers', variables('PartsUnlimitedServerNameDev'))]",
        "[resourceId('Microsoft.Sql/servers', variables('PartsUnlimitedServerNameQA'))]",
        "[resourceId('Microsoft.Insights/components', concat(parameters('WebsiteName'), '-Insights'))]",
        "[resourceId('Microsoft.Insights/components', concat(parameters('WebSiteName'), '-DevInsights'))]",
        "[resourceId('Microsoft.Insights/components', concat(parameters('WebSiteName'), '-QAInsights'))]"
      ],
      "location": "[resourceGroup().location]",
      "apiVersion": "2014-06-01",
      "tags": {
        "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('PUL_HostingPlanName'))]": "Resource",
        "displayName": "PartsUnlimitedWebsite",
        "BusinessUnit": "[variables('TAG_BusinessUnit')]",
        "Team": "[variables('TAG_Team')]",
        "CICDEngine": "[parameters('CICDEngineName')]"
      },
      "properties": {
        "name": "[parameters('WebsiteName')]",
        "serverFarm": "[parameters('PUL_HostingPlanName')]"
      },
      "resources": [
        {
          "name": "connectionstrings",
          "type": "config",
          "apiVersion": "2014-11-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites/', parameters('WebSiteName'))]"
          ],
          "properties": {
            "DefaultConnectionString": {
              "value": "[concat('Data Source=tcp:', reference(concat('Microsoft.Sql/servers/', variables('PartsUnlimitedServerName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', parameters('PUL_DBName'), ';User Id=', parameters ('PUL_DBLogin'), '@', variables('PartsUnlimitedServerName'), ';Password=', parameters('PUL_DBPassword'), ';')]",
              "type": "SQLAzure"
            }
          }
        },
        {
          "name": "appsettings",
          "type": "config",
          "apiVersion": "2014-11-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', parameters('WebSiteName'))]"
          ],
          "properties": {
            "Keys:ApplicationInsights:InstrumentationKey": "[reference(concat('Microsoft.Insights/components/', parameters('WebsiteName'), '-Insights')).InstrumentationKey]"
          }
        },
        {
          "name": "slotconfignames",
          "type": "config",
          "apiVersion": "2014-11-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', parameters('WebSiteName'))]"
          ],
          "properties": {
            "connectionStringNames": [ "DefaultConnectionString" ],
            "appSettingNames": [ "keys:ApplicationInsights:InstrumentationKey" ]
          }
        },
        {
          // KEY RESOURCE: App Service - "Dev" Slot
          "name": "Dev",
          "type": "slots",
          "location": "[resourceGroup().location]",
          "apiVersion": "2014-11-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', parameters('WebSiteName'))]"
          ],
          "tags": {
            "displayName": "[concat(parameters('WebSiteName'), '-Dev')]",
            "BusinessUnit": "[variables('TAG_BusinessUnit')]",
            "Team": "[variables('TAG_Team')]",
            "CICDEngine": "[parameters('CICDEngineName')]"
          },
          "properties": {
          },
          "resources": [
            {
              "name": "connectionstrings",
              "type": "config",
              "apiVersion": "2014-11-01",
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites/slots', parameters('WebSiteName'), 'Dev')]"
              ],
              "properties": {
                "DefaultConnectionString": {
                  "value": "[concat('Data Source=tcp:', reference(concat('Microsoft.Sql/servers/', variables('PartsUnlimitedServerNameDev'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', parameters('PUL_DBName'), ';User Id=', parameters ('PUL_DBLogin'), '@', variables('PartsUnlimitedServerNameDev'), ';Password=', parameters('PUL_DBPasswordForTest'), ';')]",
                  "type": "SQLAzure"
                }
              }
            },
            {
              "name": "appsettings",
              "type": "config",
              "apiVersion": "2014-11-01",
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites/slots', parameters('WebSiteName'), 'Dev')]"
              ],
              "properties": {
                "Keys:ApplicationInsights:InstrumentationKey": "[reference(concat('Microsoft.Insights/components/', parameters('WebsiteName'), '-DevInsights')).InstrumentationKey]"
              }
            }
          ]
        },
        {
          // KEY RESOURCE: App Service - "QA" Slot
          "name": "QA",
          "type": "slots",
          "location": "[resourceGroup().location]",
          "apiVersion": "2014-11-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', parameters('WebSiteName'))]"
          ],
          "tags": {
            "displayName": "[concat(parameters('WebSiteName'), '-QA')]",
            "BusinessUnit": "[variables('TAG_BusinessUnit')]",
            "Team": "[variables('TAG_Team')]",
            "CICDEngine": "[parameters('CICDEngineName')]"
          },
          "properties": {
          },
          "resources": [
            {
              "name": "connectionstrings",
              "type": "config",
              "apiVersion": "2014-11-01",
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites/slots', parameters('WebSiteName'), 'QA')]"
              ],
              "properties": {
                "DefaultConnectionString": {
                  "value": "[concat('Data Source=tcp:', reference(concat('Microsoft.Sql/servers/', variables('PartsUnlimitedServerNameQA'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', parameters('PUL_DBName'), ';User Id=', parameters ('PUL_DBLogin'), '@', variables('PartsUnlimitedServerNameQA'), ';Password=', parameters('PUL_DBPasswordForTest'), ';')]",
                  "type": "SQLAzure"
                }
              }
            },
            {
              "name": "appsettings",
              "type": "config",
              "apiVersion": "2014-11-01",
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites/slots', parameters('WebSiteName'), 'QA')]"
              ],
              "properties": {
                "Keys:ApplicationInsights:InstrumentationKey": "[reference(concat('Microsoft.Insights/components/', parameters('WebsiteName'), '-QAInsights')).InstrumentationKey]"
              }
            }
          ]
        }
      ]
    }
    // {
    //   "name": "[concat('ServerErrors ', parameters('WebsiteName'))]",
    //   "type": "Microsoft.Insights/alertrules",
    //   "location": "East US",
    //   "apiVersion": "2014-04-01",
    //   "dependsOn": [
    //     "[resourceId('Microsoft.Web/sites', parameters('WebSiteName'))]"
    //   ],
    //   "tags": {
    //     "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('WebsiteName'))]": "Resource",
    //     "displayName": "WebsiteAlertRuleServerErrors",
    //     "CICDEngine": "[parameters('CICDEngineName')]"
    //   },
    //   "properties": {
    //     "name": "[concat('ServerErrors ', parameters('WebsiteName'))]",
    //     "description": "[concat(parameters('WebsiteName'), ' has some server errors, status code 5xx.')]",
    //     "isEnabled": "[parameters('EnableRules')]",
    //     "condition": {
    //       "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.ThresholdRuleCondition",
    //       "dataSource": {
    //         "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleMetricDataSource",
    //         "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('WebsiteName'))]",
    //         "metricName": "Http5xx"
    //       },
    //       "operator": "GreaterThan",
    //       "threshold": 0,
    //       "windowSize": "PT5M"
    //     },
    //     "action": {
    //       "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleEmailAction",
    //       "sendToServiceOwners": true,
    //       "customEmails": []
    //     }
    //   }
    // },
    // {
    //   "name": "[concat('ForbiddenRequests ', parameters('WebsiteName'))]",
    //   "type": "Microsoft.Insights/alertrules",
    //   "location": "East US",
    //   "apiVersion": "2014-04-01",
    //   "dependsOn": [
    //     "[resourceId('Microsoft.Web/sites', parameters('WebsiteName'))]"
    //   ],
    //   "tags": {
    //     "displayName": "WebsiteAlertRuleForbiddenRequests",
    //     "CICDEngine": "[parameters('CICDEngineName')]"
    //   },
    //   "properties": {
    //     "name": "[concat('ForbiddenRequests ', parameters('WebsiteName'))]",
    //     "description": "[concat(parameters('WebsiteName'), ' has some requests that are forbidden, status code 403.')]",
    //     "isEnabled": "[parameters('EnableRules')]",
    //     "condition": {
    //       "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.ThresholdRuleCondition",
    //       "dataSource": {
    //         "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleMetricDataSource",
    //         "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('WebsiteName'))]",
    //         "metricName": "Http403"
    //       },
    //       "operator": "GreaterThan",
    //       "threshold": 0,
    //       "windowSize": "PT5M"
    //     },
    //     "action": {
    //       "odata.type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleEmailAction",
    //       "sendToServiceOwners": true,
    //       "customEmails": []
    //     }
    //   }
    // }
  ]
}
